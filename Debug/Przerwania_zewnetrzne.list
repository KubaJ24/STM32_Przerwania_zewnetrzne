
Przerwania_zewnetrzne.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000308  080001c8  080001c8  000101c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080004d0  080004d8  000104d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080004d0  080004d0  000104d8  2**0
                  CONTENTS
  4 .ARM          00000000  080004d0  080004d0  000104d8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080004d0  080004d8  000104d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080004d0  080004d0  000104d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080004d4  080004d4  000104d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000104d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080004d8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080004d8  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000104d8  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010508  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000c47  00000000  00000000  0001054b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000001d0  00000000  00000000  00011192  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000080  00000000  00000000  00011368  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000056  00000000  00000000  000113e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001b750  00000000  00000000  0001143e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000066d  00000000  00000000  0002cb8e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0009b24e  00000000  00000000  0002d1fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000148  00000000  00000000  000c844c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000075  00000000  00000000  000c8594  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	; (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	; (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	20000000 	.word	0x20000000
 80001e4:	00000000 	.word	0x00000000
 80001e8:	080004b8 	.word	0x080004b8

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	; (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	; (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	; (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	20000004 	.word	0x20000004
 8000204:	080004b8 	.word	0x080004b8

08000208 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000208:	b480      	push	{r7}
 800020a:	b083      	sub	sp, #12
 800020c:	af00      	add	r7, sp, #0
 800020e:	4603      	mov	r3, r0
 8000210:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000212:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000216:	2b00      	cmp	r3, #0
 8000218:	db0b      	blt.n	8000232 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800021a:	79fb      	ldrb	r3, [r7, #7]
 800021c:	f003 021f 	and.w	r2, r3, #31
 8000220:	4907      	ldr	r1, [pc, #28]	; (8000240 <__NVIC_EnableIRQ+0x38>)
 8000222:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000226:	095b      	lsrs	r3, r3, #5
 8000228:	2001      	movs	r0, #1
 800022a:	fa00 f202 	lsl.w	r2, r0, r2
 800022e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000232:	bf00      	nop
 8000234:	370c      	adds	r7, #12
 8000236:	46bd      	mov	sp, r7
 8000238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800023c:	4770      	bx	lr
 800023e:	bf00      	nop
 8000240:	e000e100 	.word	0xe000e100

08000244 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000244:	b480      	push	{r7}
 8000246:	b083      	sub	sp, #12
 8000248:	af00      	add	r7, sp, #0
 800024a:	4603      	mov	r3, r0
 800024c:	6039      	str	r1, [r7, #0]
 800024e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000250:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000254:	2b00      	cmp	r3, #0
 8000256:	db0a      	blt.n	800026e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000258:	683b      	ldr	r3, [r7, #0]
 800025a:	b2da      	uxtb	r2, r3
 800025c:	490c      	ldr	r1, [pc, #48]	; (8000290 <__NVIC_SetPriority+0x4c>)
 800025e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000262:	0112      	lsls	r2, r2, #4
 8000264:	b2d2      	uxtb	r2, r2
 8000266:	440b      	add	r3, r1
 8000268:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800026c:	e00a      	b.n	8000284 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800026e:	683b      	ldr	r3, [r7, #0]
 8000270:	b2da      	uxtb	r2, r3
 8000272:	4908      	ldr	r1, [pc, #32]	; (8000294 <__NVIC_SetPriority+0x50>)
 8000274:	79fb      	ldrb	r3, [r7, #7]
 8000276:	f003 030f 	and.w	r3, r3, #15
 800027a:	3b04      	subs	r3, #4
 800027c:	0112      	lsls	r2, r2, #4
 800027e:	b2d2      	uxtb	r2, r2
 8000280:	440b      	add	r3, r1
 8000282:	761a      	strb	r2, [r3, #24]
}
 8000284:	bf00      	nop
 8000286:	370c      	adds	r7, #12
 8000288:	46bd      	mov	sp, r7
 800028a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800028e:	4770      	bx	lr
 8000290:	e000e100 	.word	0xe000e100
 8000294:	e000ed00 	.word	0xe000ed00

08000298 <LD2_CONF>:
void LD2_CONF(void);
void BUTTON_CONF(void);
void Delay(void);
void BUTTON_INT_CONF(void);

void LD2_CONF(void){
 8000298:	b480      	push	{r7}
 800029a:	af00      	add	r7, sp, #0
	//GPIO PORT B CLOCK ENABLE
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 800029c:	4b14      	ldr	r3, [pc, #80]	; (80002f0 <LD2_CONF+0x58>)
 800029e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a0:	4a13      	ldr	r2, [pc, #76]	; (80002f0 <LD2_CONF+0x58>)
 80002a2:	f043 0302 	orr.w	r3, r3, #2
 80002a6:	6313      	str	r3, [r2, #48]	; 0x30
	//OUTPUT
	GPIOB->MODER |= GPIO_MODER_MODER7_0;
 80002a8:	4b12      	ldr	r3, [pc, #72]	; (80002f4 <LD2_CONF+0x5c>)
 80002aa:	681b      	ldr	r3, [r3, #0]
 80002ac:	4a11      	ldr	r2, [pc, #68]	; (80002f4 <LD2_CONF+0x5c>)
 80002ae:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80002b2:	6013      	str	r3, [r2, #0]
	GPIOB->MODER &= ~(GPIO_MODER_MODER7_1);
 80002b4:	4b0f      	ldr	r3, [pc, #60]	; (80002f4 <LD2_CONF+0x5c>)
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	4a0e      	ldr	r2, [pc, #56]	; (80002f4 <LD2_CONF+0x5c>)
 80002ba:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80002be:	6013      	str	r3, [r2, #0]
	//OUTPUT TYPE - PUSH PULL
	GPIOB->OTYPER &= ~(GPIO_OTYPER_OT7);
 80002c0:	4b0c      	ldr	r3, [pc, #48]	; (80002f4 <LD2_CONF+0x5c>)
 80002c2:	685b      	ldr	r3, [r3, #4]
 80002c4:	4a0b      	ldr	r2, [pc, #44]	; (80002f4 <LD2_CONF+0x5c>)
 80002c6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80002ca:	6053      	str	r3, [r2, #4]
	//OUTPUT SPEED VERY LOW
	GPIOB->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEEDR7);
 80002cc:	4b09      	ldr	r3, [pc, #36]	; (80002f4 <LD2_CONF+0x5c>)
 80002ce:	689b      	ldr	r3, [r3, #8]
 80002d0:	4a08      	ldr	r2, [pc, #32]	; (80002f4 <LD2_CONF+0x5c>)
 80002d2:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80002d6:	6093      	str	r3, [r2, #8]
	//NO PULL UP, NO PULL DOWN
	GPIOB->PUPDR &= ~(GPIO_PUPDR_PUPDR7);
 80002d8:	4b06      	ldr	r3, [pc, #24]	; (80002f4 <LD2_CONF+0x5c>)
 80002da:	68db      	ldr	r3, [r3, #12]
 80002dc:	4a05      	ldr	r2, [pc, #20]	; (80002f4 <LD2_CONF+0x5c>)
 80002de:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80002e2:	60d3      	str	r3, [r2, #12]
}
 80002e4:	bf00      	nop
 80002e6:	46bd      	mov	sp, r7
 80002e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ec:	4770      	bx	lr
 80002ee:	bf00      	nop
 80002f0:	40023800 	.word	0x40023800
 80002f4:	40020400 	.word	0x40020400

080002f8 <Delay>:

void Delay(void){
 80002f8:	b480      	push	{r7}
 80002fa:	b083      	sub	sp, #12
 80002fc:	af00      	add	r7, sp, #0
	uint32_t time;
	for(time = 0; time < 99999; time++){}
 80002fe:	2300      	movs	r3, #0
 8000300:	607b      	str	r3, [r7, #4]
 8000302:	e002      	b.n	800030a <Delay+0x12>
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	3301      	adds	r3, #1
 8000308:	607b      	str	r3, [r7, #4]
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	4a04      	ldr	r2, [pc, #16]	; (8000320 <Delay+0x28>)
 800030e:	4293      	cmp	r3, r2
 8000310:	d9f8      	bls.n	8000304 <Delay+0xc>
}
 8000312:	bf00      	nop
 8000314:	bf00      	nop
 8000316:	370c      	adds	r7, #12
 8000318:	46bd      	mov	sp, r7
 800031a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800031e:	4770      	bx	lr
 8000320:	0001869e 	.word	0x0001869e

08000324 <BUTTON_CONF>:

void BUTTON_CONF(void){
 8000324:	b480      	push	{r7}
 8000326:	af00      	add	r7, sp, #0
	//GPIO PORT A CLOCK ENABLE
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 8000328:	4b0b      	ldr	r3, [pc, #44]	; (8000358 <BUTTON_CONF+0x34>)
 800032a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032c:	4a0a      	ldr	r2, [pc, #40]	; (8000358 <BUTTON_CONF+0x34>)
 800032e:	f043 0301 	orr.w	r3, r3, #1
 8000332:	6313      	str	r3, [r2, #48]	; 0x30
	//INPUT
	GPIOA->MODER &= ~(GPIO_MODER_MODER4);
 8000334:	4b09      	ldr	r3, [pc, #36]	; (800035c <BUTTON_CONF+0x38>)
 8000336:	681b      	ldr	r3, [r3, #0]
 8000338:	4a08      	ldr	r2, [pc, #32]	; (800035c <BUTTON_CONF+0x38>)
 800033a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800033e:	6013      	str	r3, [r2, #0]
	//PULL UP
	GPIOA->PUPDR |= GPIO_PUPDR_PUPDR4_0;
 8000340:	4b06      	ldr	r3, [pc, #24]	; (800035c <BUTTON_CONF+0x38>)
 8000342:	68db      	ldr	r3, [r3, #12]
 8000344:	4a05      	ldr	r2, [pc, #20]	; (800035c <BUTTON_CONF+0x38>)
 8000346:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800034a:	60d3      	str	r3, [r2, #12]
}
 800034c:	bf00      	nop
 800034e:	46bd      	mov	sp, r7
 8000350:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000354:	4770      	bx	lr
 8000356:	bf00      	nop
 8000358:	40023800 	.word	0x40023800
 800035c:	40020000 	.word	0x40020000

08000360 <BUTTON_INT_CONF>:

void BUTTON_INT_CONF(void){
 8000360:	b580      	push	{r7, lr}
 8000362:	af00      	add	r7, sp, #0
	//SYSCFG ENABLE
	RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 8000364:	4b11      	ldr	r3, [pc, #68]	; (80003ac <BUTTON_INT_CONF+0x4c>)
 8000366:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000368:	4a10      	ldr	r2, [pc, #64]	; (80003ac <BUTTON_INT_CONF+0x4c>)
 800036a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800036e:	6453      	str	r3, [r2, #68]	; 0x44
	//EXTERNAL INT CONFIG IN SYSCFG
	SYSCFG->EXTICR[2] = 0;
 8000370:	4b0f      	ldr	r3, [pc, #60]	; (80003b0 <BUTTON_INT_CONF+0x50>)
 8000372:	2200      	movs	r2, #0
 8000374:	611a      	str	r2, [r3, #16]
	//EXTI MASK DISABLE
	EXTI->IMR |= EXTI_IMR_IM4;
 8000376:	4b0f      	ldr	r3, [pc, #60]	; (80003b4 <BUTTON_INT_CONF+0x54>)
 8000378:	681b      	ldr	r3, [r3, #0]
 800037a:	4a0e      	ldr	r2, [pc, #56]	; (80003b4 <BUTTON_INT_CONF+0x54>)
 800037c:	f043 0310 	orr.w	r3, r3, #16
 8000380:	6013      	str	r3, [r2, #0]
	//INT ON FALLING EDGE
	EXTI->FTSR |= EXTI_FTSR_TR4;
 8000382:	4b0c      	ldr	r3, [pc, #48]	; (80003b4 <BUTTON_INT_CONF+0x54>)
 8000384:	68db      	ldr	r3, [r3, #12]
 8000386:	4a0b      	ldr	r2, [pc, #44]	; (80003b4 <BUTTON_INT_CONF+0x54>)
 8000388:	f043 0310 	orr.w	r3, r3, #16
 800038c:	60d3      	str	r3, [r2, #12]
	EXTI->RTSR &= ~(EXTI_RTSR_TR4);
 800038e:	4b09      	ldr	r3, [pc, #36]	; (80003b4 <BUTTON_INT_CONF+0x54>)
 8000390:	689b      	ldr	r3, [r3, #8]
 8000392:	4a08      	ldr	r2, [pc, #32]	; (80003b4 <BUTTON_INT_CONF+0x54>)
 8000394:	f023 0310 	bic.w	r3, r3, #16
 8000398:	6093      	str	r3, [r2, #8]
	//SET PRIORITY
	NVIC_SetPriority (EXTI4_IRQn, 2);
 800039a:	2102      	movs	r1, #2
 800039c:	200a      	movs	r0, #10
 800039e:	f7ff ff51 	bl	8000244 <__NVIC_SetPriority>
	//ENABLE INT
	NVIC_EnableIRQ (EXTI4_IRQn);
 80003a2:	200a      	movs	r0, #10
 80003a4:	f7ff ff30 	bl	8000208 <__NVIC_EnableIRQ>
}
 80003a8:	bf00      	nop
 80003aa:	bd80      	pop	{r7, pc}
 80003ac:	40023800 	.word	0x40023800
 80003b0:	40013800 	.word	0x40013800
 80003b4:	40013c00 	.word	0x40013c00

080003b8 <main>:

//INT HANDLER FOR BUTTON
void EXTI4_IRQHandler(void);

int main(void)
{
 80003b8:	b580      	push	{r7, lr}
 80003ba:	af00      	add	r7, sp, #0
    LD2_CONF();
 80003bc:	f7ff ff6c 	bl	8000298 <LD2_CONF>
	BUTTON_CONF();
 80003c0:	f7ff ffb0 	bl	8000324 <BUTTON_CONF>
	BUTTON_INT_CONF();
 80003c4:	f7ff ffcc 	bl	8000360 <BUTTON_INT_CONF>

	LD2_OFF;
 80003c8:	4b03      	ldr	r3, [pc, #12]	; (80003d8 <main+0x20>)
 80003ca:	699b      	ldr	r3, [r3, #24]
 80003cc:	4a02      	ldr	r2, [pc, #8]	; (80003d8 <main+0x20>)
 80003ce:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80003d2:	6193      	str	r3, [r2, #24]

	while(1){
 80003d4:	e7fe      	b.n	80003d4 <main+0x1c>
 80003d6:	bf00      	nop
 80003d8:	40020400 	.word	0x40020400

080003dc <EXTI4_IRQHandler>:

	}
}

void EXTI4_IRQHandler(void){
 80003dc:	b580      	push	{r7, lr}
 80003de:	af00      	add	r7, sp, #0
	while(BUTTON_PRESSED){
 80003e0:	bf00      	nop
 80003e2:	4b0b      	ldr	r3, [pc, #44]	; (8000410 <EXTI4_IRQHandler+0x34>)
 80003e4:	691b      	ldr	r3, [r3, #16]
 80003e6:	f003 0310 	and.w	r3, r3, #16
 80003ea:	2b00      	cmp	r3, #0
 80003ec:	d0f9      	beq.n	80003e2 <EXTI4_IRQHandler+0x6>
		//WAIT
	}
	Delay();
 80003ee:	f7ff ff83 	bl	80002f8 <Delay>
	LD2_TOGGLE;
 80003f2:	4b08      	ldr	r3, [pc, #32]	; (8000414 <EXTI4_IRQHandler+0x38>)
 80003f4:	695b      	ldr	r3, [r3, #20]
 80003f6:	4a07      	ldr	r2, [pc, #28]	; (8000414 <EXTI4_IRQHandler+0x38>)
 80003f8:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 80003fc:	6153      	str	r3, [r2, #20]
	BUTTON_INT_CLEAR;
 80003fe:	4b06      	ldr	r3, [pc, #24]	; (8000418 <EXTI4_IRQHandler+0x3c>)
 8000400:	695b      	ldr	r3, [r3, #20]
 8000402:	4a05      	ldr	r2, [pc, #20]	; (8000418 <EXTI4_IRQHandler+0x3c>)
 8000404:	f043 0310 	orr.w	r3, r3, #16
 8000408:	6153      	str	r3, [r2, #20]
}
 800040a:	bf00      	nop
 800040c:	bd80      	pop	{r7, pc}
 800040e:	bf00      	nop
 8000410:	40020000 	.word	0x40020000
 8000414:	40020400 	.word	0x40020400
 8000418:	40013c00 	.word	0x40013c00

0800041c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800041c:	480d      	ldr	r0, [pc, #52]	; (8000454 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800041e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000420:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000424:	480c      	ldr	r0, [pc, #48]	; (8000458 <LoopForever+0x6>)
  ldr r1, =_edata
 8000426:	490d      	ldr	r1, [pc, #52]	; (800045c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000428:	4a0d      	ldr	r2, [pc, #52]	; (8000460 <LoopForever+0xe>)
  movs r3, #0
 800042a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800042c:	e002      	b.n	8000434 <LoopCopyDataInit>

0800042e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800042e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000430:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000432:	3304      	adds	r3, #4

08000434 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000434:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000436:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000438:	d3f9      	bcc.n	800042e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800043a:	4a0a      	ldr	r2, [pc, #40]	; (8000464 <LoopForever+0x12>)
  ldr r4, =_ebss
 800043c:	4c0a      	ldr	r4, [pc, #40]	; (8000468 <LoopForever+0x16>)
  movs r3, #0
 800043e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000440:	e001      	b.n	8000446 <LoopFillZerobss>

08000442 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000442:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000444:	3204      	adds	r2, #4

08000446 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000446:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000448:	d3fb      	bcc.n	8000442 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800044a:	f000 f811 	bl	8000470 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800044e:	f7ff ffb3 	bl	80003b8 <main>

08000452 <LoopForever>:

LoopForever:
  b LoopForever
 8000452:	e7fe      	b.n	8000452 <LoopForever>
  ldr   r0, =_estack
 8000454:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 8000458:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800045c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000460:	080004d8 	.word	0x080004d8
  ldr r2, =_sbss
 8000464:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000468:	2000001c 	.word	0x2000001c

0800046c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800046c:	e7fe      	b.n	800046c <ADC_IRQHandler>
	...

08000470 <__libc_init_array>:
 8000470:	b570      	push	{r4, r5, r6, lr}
 8000472:	4d0d      	ldr	r5, [pc, #52]	; (80004a8 <__libc_init_array+0x38>)
 8000474:	4c0d      	ldr	r4, [pc, #52]	; (80004ac <__libc_init_array+0x3c>)
 8000476:	1b64      	subs	r4, r4, r5
 8000478:	10a4      	asrs	r4, r4, #2
 800047a:	2600      	movs	r6, #0
 800047c:	42a6      	cmp	r6, r4
 800047e:	d109      	bne.n	8000494 <__libc_init_array+0x24>
 8000480:	4d0b      	ldr	r5, [pc, #44]	; (80004b0 <__libc_init_array+0x40>)
 8000482:	4c0c      	ldr	r4, [pc, #48]	; (80004b4 <__libc_init_array+0x44>)
 8000484:	f000 f818 	bl	80004b8 <_init>
 8000488:	1b64      	subs	r4, r4, r5
 800048a:	10a4      	asrs	r4, r4, #2
 800048c:	2600      	movs	r6, #0
 800048e:	42a6      	cmp	r6, r4
 8000490:	d105      	bne.n	800049e <__libc_init_array+0x2e>
 8000492:	bd70      	pop	{r4, r5, r6, pc}
 8000494:	f855 3b04 	ldr.w	r3, [r5], #4
 8000498:	4798      	blx	r3
 800049a:	3601      	adds	r6, #1
 800049c:	e7ee      	b.n	800047c <__libc_init_array+0xc>
 800049e:	f855 3b04 	ldr.w	r3, [r5], #4
 80004a2:	4798      	blx	r3
 80004a4:	3601      	adds	r6, #1
 80004a6:	e7f2      	b.n	800048e <__libc_init_array+0x1e>
 80004a8:	080004d0 	.word	0x080004d0
 80004ac:	080004d0 	.word	0x080004d0
 80004b0:	080004d0 	.word	0x080004d0
 80004b4:	080004d4 	.word	0x080004d4

080004b8 <_init>:
 80004b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004ba:	bf00      	nop
 80004bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004be:	bc08      	pop	{r3}
 80004c0:	469e      	mov	lr, r3
 80004c2:	4770      	bx	lr

080004c4 <_fini>:
 80004c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004c6:	bf00      	nop
 80004c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004ca:	bc08      	pop	{r3}
 80004cc:	469e      	mov	lr, r3
 80004ce:	4770      	bx	lr
